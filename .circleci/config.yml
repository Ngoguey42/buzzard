# Python CircleCI 2.0 configuration file
#
# Source: https://circleci.com/docs/2.0/language-python/ for more details
#
---
version: 2

variables:
  base_docker_image: &base_docker_image circleci/python:3.8
  working_directory: &working_directory /tmp/circleci/buzzard
  workspace_directory: &workspace_directory /tmp/circleci/

references:
  base_container_config: &base_container_config
    working_directory: *working_directory
    docker:
      - image: *base_docker_image

  py36_container_config: &py36_container_config
    working_directory: *working_directory
    docker:
      - image: buzzardpython/ci:py36@sha256:830824745288acec08dfc31116ab847f9e95d6567bbda3f52baa03a757886c2a

  py37_container_config: &py37_container_config
    working_directory: *working_directory
    docker:
      - image: buzzardpython/ci:py37@sha256:6a5dd3373f0a88a3200e7b0859ebda33357739dc6cadc97ab2a314595c2587c5

  py38_container_config: &py38_container_config
    working_directory: *working_directory
    docker:
      - image: buzzardpython/ci:py38@sha256:2a55d84c17296550d6602af255c7fdd4fdf9ee2b2cc09bf60763337c166be931

  repo_cache_key: &repo_cache_key
    repo-v2-{{ .Branch }}-{{ .Revision }}

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key
        - repo-v2-{{ .Branch }}
        - repo-v2-

  py36_requirements_cache_key: &py36_requirements_cache_key
    py36-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}
  py36_requirements_backup_cache_key: &py36_requirements_backup_cache_key
    py36-dependencies-v7-
  py36_restore_dependencies: &py36_restore_dependencies
    restore_cache:
      keys:
        - *py36_requirements_cache_key
        - *py36_requirements_backup_cache_key

  py37_requirements_cache_key: &py37_requirements_cache_key
    py37-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}
  py37_requirements_backup_cache_key: &py37_requirements_backup_cache_key
    py37-dependencies-v7-
  py37_restore_dependencies: &py37_restore_dependencies
    restore_cache:
      keys:
        - *py37_requirements_cache_key
        - *py37_requirements_backup_cache_key

  py38_requirements_cache_key: &py38_requirements_cache_key
    py38-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}
  py38_requirements_backup_cache_key: &py38_requirements_backup_cache_key
    py38-dependencies-v7-
  py38_restore_dependencies: &py38_restore_dependencies
    restore_cache:
      keys:
        - *py38_requirements_cache_key
        - *py38_requirements_backup_cache_key

jobs:
  init:
    <<: *base_container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: *repo_cache_key
          paths:
            - .

  lint:
    <<: *base_container_config
    steps:
      - *restore_repo
      - run:
          name: install lint dependencies
          command: |
            mkdir -p venvs/lint
            python -m venv ./venvs/lint
            . venvs/lint/bin/activate
            pip install -r requirements-lint.txt
      - run:
          name: run linter
          command: |
            mkdir -p test-reports
            . venvs/lint/bin/activate
            python --version
            pylint buzzard --output-format=json > test-reports/pylint.json || true
      - store_artifacts:
          path: test-reports
          destination: test-reports

  py36_test:
    <<: *py36_container_config
    parallelism: 1
    steps:
      - *restore_repo
      - *py36_restore_dependencies
      - run:
          name: install python36 dependencies
          command: |
            mkdir -p venvs/36
            python -m venv ./venvs/36
            . venvs/36/bin/activate
            pip install -r requirements-ci.txt
            pip uninstall -y gdal
            pip install GDAL==$(gdal-config --version) --global-option=build_ext --global-option="-I/usr/include/gdal"
      - run:
          name: run tests
          command: |
            . venvs/36/bin/activate
            python scripts/pytest_parallel.py -x --junitxml=test-reports/pytest-report.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py36_requirements_cache_key
          paths:
            - ./venvs/36

  py37_test:
    <<: *py37_container_config
    parallelism: 1
    steps:
      - *restore_repo
      - *py37_restore_dependencies
      - run:
          name: install python37 dependencies
          command: |
            mkdir -p venvs/37
            python -m venv ./venvs/37
            . venvs/37/bin/activate
            # Workaround from https://github.com/PyWavelets/pywt/issues/375
            pip install Cython
            pip install numpy>=1.13

            pip install -r requirements-ci.txt
            pip uninstall -y gdal
            pip install GDAL==$(gdal-config --version) --global-option=build_ext --global-option="-I/usr/include/gdal"
      - run:
          name: run tests
          command: |
            . venvs/37/bin/activate
            python scripts/pytest_parallel.py -x --cov=buzzard --cov-report=term --cov-report=xml:test-reports/coverage.xml --junitxml=test-reports/pytest-report.xml
            ls -l test-reports
            # codecov first concatenate the coverage*.xml files and upload it
            # it does not seem to care about the pytest-report*.xml, is it a problem?
            # https://circleci.com/gh/airware/buzzard/1564#queue-placeholder/containers/0
            # It used to upload those.
            # https://circleci.com/gh/airware/buzzard/1506#artifacts/containers/0
            codecov

      - store_artifacts:
          # We now store the coverage*.xml files, is it a problem?
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py37_requirements_cache_key
          paths:
            - ./venvs/37

  end:
    <<: *base_container_config
    steps:
      - run:
          name: "Buzzard End task"
          command: |
            echo "Workflow finished"

  py38_test:
    <<: *py38_container_config
    parallelism: 1
    steps:
      - *restore_repo
      - *py38_restore_dependencies
      - run:
          name: install python38 dependencies
          command: |
            mkdir -p venvs/38
            python -m venv ./venvs/38
            . venvs/38/bin/activate
            pip install -r requirements-ci.txt
            pip uninstall -y gdal
            pip install GDAL==$(gdal-config --version) --global-option=build_ext --global-option="-I/usr/include/gdal"
      - run:
          name: run tests
          command: |
            . venvs/38/bin/activate
            python scripts/pytest_parallel.py -x --junitxml=test-reports/pytest-report.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py38_requirements_cache_key
          paths:
            - ./venvs/38

workflows:
  version: 2
  buzzard:
    jobs:
      - init
      - lint:
          requires:
            - init
      - py36_test:
          requires:
            - init
      - py37_test:
          requires:
            - init
      - py38_test:
          requires:
            - init
      - end:
          requires:
            - lint
            - py36_test
            - py37_test
            - py38_test
